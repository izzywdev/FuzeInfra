FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies for Chrome/Chromium and other tools
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    unzip \
    curl \
    git \
    build-essential \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    pkg-config \
    # Chrome dependencies
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better Docker layer caching
COPY requirements.txt requirements.docker.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r requirements.docker.txt

# Copy application code
COPY src/ ./src/
COPY main.py ./
COPY run_scrapy.py ./
COPY .env ./

# Create directories for data and logs
RUN mkdir -p /app/data /app/logs /app/cache

# Set environment variables
ENV PYTHONPATH=/app
ENV DISPLAY=:99
ENV CHROME_ARGS="--headless --no-sandbox --disable-dev-shm-usage --disable-gpu"

# Create non-root user for security
RUN groupadd -r robotics && useradd -r -g robotics robotics \
    && chown -R robotics:robotics /app

USER robotics

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${HEALTH_CHECK_PORT:-8090}/health || exit 1

# Default command
CMD ["python", "src/swagger_server.py"] 